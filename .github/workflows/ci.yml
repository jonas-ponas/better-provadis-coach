name: Build & Deploy Services
run-name: Build & Deploy Services
on: 
  push:
    branches:
      - main
      - develop

jobs:
  check:
    name: "Find Changes" 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            workflows:
              - '.github/workflows/**'
            sync:
              - 'sync-service/**'
            fronted:
              - 'frontend/**'
      - name: Get Short SHA
        id: vars
        run: |
          echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    outputs:
      sync: ${{ steps.filter.outputs.sync == 'true' }}
      frontend: ${{ steps.filter.outputs.frontend }}
      workflows: ${{ steps.filter.outputs.workflows }}
      short_sha: ${{ steps.vars.outputs.short_sha}}
  build-frontend:
    name: "Frontend"
    needs: check
    if: ${{ needs.check.outputs.frontend == 'true' || needs.check.outputs.workflows == 'true' }}
    uses: ./.github/workflows/build.yml
    with:
      docker-image-name: "jonas-ponas/expert-giggle-frontend"
      context: ./frontend/
      build-args: |
        UI_VERSION=${{ needs.check.outputs.short_sha }}
        PB_VERSION=${{ vars.PB_VERSION }}
    secrets: inherit
  build-sync:
    name: "Sync-Service"
    needs: check
    if: ${{ needs.check.outputs.sync == 'true' || needs.check.outputs.workflows == 'true' }}
    uses: ./.github/workflows/build.yml
    with:
      docker-image-name: "jonas-ponas/expert-giggle"
      context: ./sync-service/
    secrets: inherit
  deploy:
    name: "Deploy"
    needs: 
      - build-frontend
      - build-sync
    if: |
      always() && 
      (needs.build-frontend.result == 'success' || needs.build-frontend.result == 'skipped') && 
      (needs.build-sync.result == 'success' || needs.build-sync.result == 'skipped') && 
      !(needs.build-frontend.result == 'skipped' && needs.build-sync.result == 'skipped')
    runs-on: ubuntu-latest
    steps:
      - name: Call Watchtower
        run: |
          curl -H "Authorization: Bearer ${{secrets.WATCHTOWER_TOKEN}}" ${{secrets.WATCHTOWER_ENDPOINT}}